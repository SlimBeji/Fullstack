{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/auth/signin": {
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User authentication",
                "parameters": [
                    {
                        "minLength": 8,
                        "type": "string",
                        "default": "very_secret",
                        "description": "The user password, 8 characters at least",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mslimbeji@gmail.com",
                        "description": "The user email (We use username here because of OAuth spec)",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.EncodedToken"
                        }
                    }
                }
            }
        },
        "/api/auth/signup": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "type": "string",
                        "example": "mslimbeji@gmail.com",
                        "description": "The user email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 2,
                        "type": "string",
                        "example": "Slim Beji",
                        "description": "The user name, two characters at least",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 8,
                        "type": "string",
                        "example": "very_secret",
                        "description": "The user password, 8 characters at least",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "User's profile image (JPEG)",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.EncodedToken"
                        }
                    }
                }
            }
        },
        "/api/hello-world/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hello World"
                ],
                "summary": "Hello World Endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseExample"
                        }
                    }
                }
            }
        },
        "/api/hello-world/admin": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": [
                            "admin"
                        ]
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hello World"
                ],
                "summary": "Hello World Endpoint for admins only",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseExample"
                        }
                    }
                }
            }
        },
        "/api/hello-world/user": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": [
                            "admin"
                        ]
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hello World"
                ],
                "summary": "Hello World Endpoint for authenticated users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseExample"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": [
                            "admin"
                        ]
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User creation",
                "parameters": [
                    {
                        "type": "string",
                        "example": "mslimbeji@gmail.com",
                        "description": "The user email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "example": false,
                        "description": "Whether the user is an admin or not",
                        "name": "isAdmin",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 2,
                        "type": "string",
                        "example": "Slim Beji",
                        "description": "The user name, two characters at least",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 8,
                        "type": "string",
                        "example": "very_secret",
                        "description": "The user password, 8 characters at least",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "the user profile image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UserRead"
                        }
                    }
                }
            }
        },
        "/api/users/{userId}": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": [
                            "admin"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Search and Retrieve user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UserRead"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "OAuth2Password": [
                            "admin"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "PUT parameters",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UserPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UserRead"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OAuth2Password": [
                            "admin"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.DeleteResponseExample"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "routes.DeleteResponseExample": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Deleted user 507f1f77bcf86cd799439011"
                }
            }
        },
        "routes.ResponseExample": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "schemas.EncodedToken": {
            "type": "object",
            "required": [
                "access_token",
                "email",
                "expires_in",
                "token_type",
                "userId"
            ],
            "properties": {
                "access_token": {
                    "description": "A generated web token. The 'Bearer ' prefix needs to be added for authentication",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODIyNDVhOWY2YTU5ZjVlNjM2Y2NmYjEiLCJlbWFpbCI6ImJlamkuc2xpbUB5YWhvby5mciIsImlhdCI6MTc0NzMzNjUxMCwiZXhwIjoxNzQ3MzQwMTEwfQ.C4DCJKvGWhpHClpqmxHyxKLPYDOZDUlr-LA_2IflTXM"
                },
                "email": {
                    "description": "The user email",
                    "type": "string",
                    "example": "mslimbeji@gmail.com"
                },
                "expires_in": {
                    "description": "The UNIX timestamp the token expires at",
                    "type": "integer",
                    "example": 1751879562
                },
                "token_type": {
                    "description": "The type of token. Only 'bearer' is supported.",
                    "type": "string",
                    "enum": [
                        "bearer"
                    ],
                    "example": "bearer"
                },
                "userId": {
                    "description": "The user ID, 24 characters",
                    "type": "string",
                    "example": "683b21134e2e5d46978daf1f"
                }
            }
        },
        "schemas.UserPut": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "The user email",
                    "type": "string",
                    "example": "mslimbeji@gmail.com"
                },
                "name": {
                    "description": "The user name, two characters at least",
                    "type": "string",
                    "minLength": 2,
                    "example": "Slim Beji"
                },
                "password": {
                    "description": "The user password, 8 characters at least",
                    "type": "string",
                    "minLength": 8,
                    "example": "very_secret"
                }
            }
        },
        "schemas.UserRead": {
            "type": "object",
            "required": [
                "email",
                "id",
                "isAdmin",
                "name",
                "places"
            ],
            "properties": {
                "email": {
                    "description": "The user email",
                    "type": "string",
                    "example": "mslimbeji@gmail.com"
                },
                "id": {
                    "description": "The user ID, 24 characters",
                    "type": "string",
                    "example": "683b21134e2e5d46978daf1f"
                },
                "imageUrl": {
                    "description": "local url on the storage",
                    "type": "string",
                    "example": "avatar2_80e32f88-c9a5-4fcd-8a56-76b5889440cd.jpg"
                },
                "isAdmin": {
                    "description": "Whether the user is an admin or not",
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "description": "The user name, two characters at least",
                    "type": "string",
                    "minLength": 2,
                    "example": "Slim Beji"
                },
                "places": {
                    "description": "The id of places belonging to the user, 24 characters",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "683b21134e2e5d46978daf1f"
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "/api/auth/signin"
        }
    },
    "tags": [
        {
            "description": "Registration and Authentication endpoints",
            "name": "Auth"
        },
        {
            "description": "Hello World endpoints",
            "name": "Hello World"
        },
        {
            "description": "User crud endpoints",
            "name": "User"
        },
        {
            "description": "Place crud endpoints",
            "name": "Place"
        }
    ]
}
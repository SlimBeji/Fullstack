// Code generated by go generate; DO NOT EDIT.
package schemas

import (
	"backend/internal/types_"
	"mime/multipart"
)

type Location struct {
	Lat float64 `json:"lat" bson:"lat" validate:"required"`
	Lng float64 `json:"lng" bson:"lng" validate:"required"`
}

type PlaceDB struct {
	ID          string    `json:"id" bson:"_id,omitempty" validate:"required,hexadecimal,len=24"`
	Title       string    `json:"title" bson:"title" validate:"required,min=10"`
	Description string    `json:"description" bson:"description" validate:"required,min=10"`
	Address     string    `json:"address" bson:"address" validate:"required,min=10"`
	Location    Location  `json:"location" bson:"location" validate:"required"`
	ImageUrl    string    `json:"imageUrl" bson:"imageUrl"`
	Embedding   []float64 `json:"embedding" bson:"embedding" validate:"required,len=384"`
	CreatorID   string    `json:"creatorId" bson:"creatorId" validate:"required,hexadecimal,len=24"`
}

type PlacSeed struct {
	Ref         int
	CreatorRef  int
	Title       string    `json:"title" bson:"title" validate:"required,min=10"`
	Description string    `json:"description" bson:"description" validate:"required,min=10"`
	Address     string    `json:"address" bson:"address" validate:"required,min=10"`
	Location    Location  `json:"location" bson:"location" validate:"required"`
	Embedding   []float64 `json:"embedding" bson:"embedding" validate:"required,len=384"`
	ImageUrl    string    `json:"imageUrl" bson:"imageUrl"`
}

type PlaceCreate struct {
	Title       string    `json:"title" bson:"title" validate:"required,min=10"`
	Description string    `json:"description" bson:"description" validate:"required,min=10"`
	Address     string    `json:"address" bson:"address" validate:"required,min=10"`
	Location    Location  `json:"location" bson:"location" validate:"required"`
	Embedding   []float64 `json:"embedding" bson:"embedding" validate:"required,len=384"`
	ImageUrl    string    `json:"imageUrl" bson:"imageUrl"`
	CreatorID   string    `json:"creatorId" bson:"creatorId" validate:"required,hexadecimal,len=24"`
}

type PlacePost struct {
	Title       string                `json:"title" bson:"title" validate:"required,min=10"`
	Description string                `json:"description" bson:"description" validate:"required,min=10"`
	Address     string                `json:"address" bson:"address" validate:"required,min=10"`
	Location    Location              `json:"location" bson:"location" validate:"required"`
	Image       *multipart.FileHeader `json:"image" bson:"image"`
	CreatorID   string                `json:"creatorId" bson:"creatorId" validate:"required,hexadecimal,len=24"`
}

type PlaceRead struct {
	ID          string   `json:"id" bson:"_id,omitempty" validate:"required,hexadecimal,len=24"`
	Title       string   `json:"title" bson:"title" validate:"required,min=10"`
	Description string   `json:"description" bson:"description" validate:"required,min=10"`
	Address     string   `json:"address" bson:"address" validate:"required,min=10"`
	Location    Location `json:"location" bson:"location" validate:"required"`
	ImageUrl    string   `json:"imageUrl" bson:"imageUrl"`
	CreatorID   string   `json:"creatorId" bson:"creatorId" validate:"required,hexadecimal,len=24"`
}

type PlacesPaginated = types_.RecordsPaginated[PlaceRead]

type PlaceFilters struct {
	Page        string   `json:"page"`
	Size        string   `json:"size"`
	Sort        []string `json:"sort" validate:"dive,oneof=createdAt -createdAt title -title description -description address -address"`
	Fields      []string `json:"fields" validate:"dive,oneof=id title description address location.lat location.lng imageUrl creatorId"`
	Id          []string `json:"id" filter:"string,hexadecimal,len=24"`
	Title       []string `json:"title" filter:"string,min=10"`
	Description []string `json:"description" filter:"string,min=10"`
	Address     []string `json:"address" filter:"string,min=10"`
	CreatorId   []string `json:"creatorId" filter:"string,hexadecimal,len=24"`
	LocationLat []string `json:"locationLat" filter:"float64"`
	LocationLng []string `json:"locationLng" filter:"float64"`
}

type PlaceUpdate struct {
	Title       string   `json:"title" bson:"title" validate:"min=10"`
	Description string   `json:"description" bson:"description" validate:"min=10"`
	Address     string   `json:"address" bson:"address" validate:"min=10"`
	Location    Location `json:"location" bson:"location"`
	CreatorID   string   `json:"creatorId" bson:"creatorId" validate:"hexadecimal,len=24"`
}

type PlacePut struct {
	PlaceUpdate
}

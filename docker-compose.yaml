services:
    react:
        build:
            context: .
            dockerfile: ./react/react.Dockerfile
        container_name: react
        ports:
            - 8000:5173
        volumes:
            - ./react:/app
            - /app/node_modules
        env_file:
            - ./react/react.env
        depends_on:
            - express
        command: npm run dev
        restart: on-failure

    express:
        build:
            context: .
            dockerfile: ./express/express.Dockerfile
        container_name: express
        ports:
            - 5000:5000
        volumes:
            - ./express:/app
            - /app/node_modules
        env_file:
            - ./express/express.env
        depends_on:
            - mongo1
            - mongo2
            - gcs
        command: npm start
        restart: on-failure

    mongo1:
        image: mongo:latest
        container_name: mongo1
        ports:
            - 27017:27017
        volumes:
            - ./mongo/1:/data/db
        command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
        restart: on-failure

    mongo2:
        image: mongo:latest
        container_name: mongo2
        ports:
            - 27018:27017
        volumes:
            - ./mongo/2:/data/db
        command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
        restart: on-failure

    mongo-setup:
        image: mongo:latest
        container_name: mongo-setup
        depends_on:
            - mongo1
            - mongo2
        entrypoint: >
            bash -c "
                sleep 5;
                echo 'rs.initiate({
                _id: \"rs0\",
                members: [
                    { _id: 0, host: \"mongo1:27017\" },
                    { _id: 1, host: \"mongo2:27017\" }
                ]
                })' | mongosh --host mongo1:27017
            "

    mongo-express:
        image: mongo-express:latest
        container_name: mongo-express
        ports:
            - 9000:8081
        volumes:
            - ./mongo-express:/app/config/
        environment:
            ME_CONFIG_MONGODB_URL: mongodb://mongo1:27017,mongo2:27017/?replicaSet=rs0
            ME_CONFIG_BASICAUTH: false
        depends_on:
            - mongo-setup
        restart: on-failure

    gcs:
        image: fsouza/fake-gcs-server
        container_name: gcs
        ports:
            - 4443:4443
        volumes:
            - ./gcs:/storage
        command:
            [
                "-scheme",
                "http",
                "-public-host",
                "gcs:4443",
                "-external-url",
                "http://gcs:4443",
                "-backend",
                "filesystem",
                "-filesystem-root",
                "/storage",
            ]
        restart: on-failure

    redis:
        image: redis:6.2-alpine
        container_name: redis
        ports:
            - 6379:6379
        volumes:
            - ./redis:/data
        command: redis-server --save 20 1 --loglevel warning
        restart: on-failure

    redisinsight:
        image: redislabs/redisinsight:latest
        container_name: redisinsight
        volumes:
            - redisinsight:/data
        ports:
            - 9001:5540
        restart: on-failure

volumes:
    redisinsight:
